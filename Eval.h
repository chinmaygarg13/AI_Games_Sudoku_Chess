#include <iostream>
#include <string>
#include <vector>
#include <map>
#include <algorithm>

using namespace std;

void reverseArray(int A[8][8], int B[8][8]) {
    for(int row = 0; row < 8; row++) {
        for(int col = 0; col < 8; col++) {
            A[row][col] = B[row][col];
        }
    }
    for(int row = 0; row <= 3; row++) {
        for(int col = 0; col <= 7; col++) {
            int t_row = 7-row;
            swap(A[row][col], A[t_row][col]);
        }
    }
}

int pawnEvalWhite[8][8] =
    {
        {0,  00,  00,  00,  00,  00,  00,  00},
        {50,  50,  50,  50,  50,  50,  50,  50},
        {10,  10,  20,  30,  30,  20,  10,  10},
        {5,  05,  10,  25,  25,  10,  05,  05},
        {0,  0,  00,  20,  20,  00,  00,  00},
        {5, -5, -10,  00,  00, -10, -05,  05},
        {5,  1, 10,  -20, -20,  10,  10,  05},
        {0,  0,  00,  00,  00,  00,  00,  00}
    };

int pawnEvalBlack[8][8];


int knightEval[8][8] =
    {
        {-50, -40, -30, -30, -30, -30, -40, -50},
        {-40, -20,  00,  00,  00,  00, -20, -40},
        {-30,  00,  10,  15,  15,  10,  00, -30},
        {-30,  05,  15,  20,  20,  15,  05, -30},
        {-30,  00,  15,  20,  20,  15,  00, -30},
        {-30,  05,  10,  15,  15,  10,  05, -30},
        {-40, -20,  00,  05,  05,  00, -20, -40},
        {-50, -40, -30, -30, -30, -30, -40, -50}
    };

int bishopEvalWhite[8][8] = {
    { -20, -10, -10, -10, -10, -10, -10, -20},
    { -10,  00,  00,  00,  00,  00,  00, -10},
    { -10,  00,  05,  10,  10,  05,  00, -10},
    { -10,  05,  05,  10,  10,  05,  05, -10},
    { -10,  00,  10,  10,  10,  10,  00, -10},
    { -10,  10,  10,  10,  10,  10,  10, -10},
    { -10,  05,  00,  00,  00,  00,  05, -10},
    { -20, -10, -10, -10, -10, -10, -10, -20}
};

int bishopEvalBlack[8][8];


int rookEvalWhite[8][8] = {
    {  00,  00,  00,  00,  00,  00,  00,  00},
    {  05,  10,  10,  10,  10,  10,  10,  05},
    { -05,  00,  00,  00,  00,  00,  00, -05},
    { -05,  00,  00,  00,  00,  00,  00, -05},
    { -05,  00,  00,  00,  00,  00,  00, -05},
    { -05,  00,  00,  00,  00,  00,  00, -05},
    { -05,  00,  00,  00,  00,  00,  00, -05},
    {  00,   00, 00,  05,  05,  00,  00,  00}
};

int rookEvalBlack[8][8];


int evalQueen[8][8] = {
    { -20, -10, -10, -05, -05, -10, -10, -20},
    { -10,  00,  00,  00,  00,  00,  00, -10},
    { -10,  00,  05,  05,  05,  05,  00, -10},
    { -05,  00,  05,  05,  05,  05,  00, -05},
    {  00,  00,  05,  05,  05,  05,  00, -05},
    { -10,  05,  05,  05,  05,  05,  00, -10},
    { -10,  00,  05,  00,  00,  00,  00, -10},
    { -20, -10, -10, -05, -05, -10, -10, -20}
};

int kingEvalWhite[8][8] = {

    { -30, -40, -40, -50, -50, -40, -40, -30},
    { -30, -40, -40, -50, -50, -40, -40, -30},
    { -30, -40, -40, -50, -50, -40, -40, -30},
    { -30, -40, -40, -50, -50, -40, -40, -30},
    { -20, -30, -30, -40, -40, -30, -30, -20},
    { -10, -20, -20, -20, -20, -20, -20, -10},
    {  20,  20,  00,  00,  00,  00,  20,  20 },
    {  20,  30,  10,  00,  00,  10,  30,  20 }
};

int kingEvalBlack[8][8];


void init() {
    reverseArray(pawnEvalBlack, pawnEvalWhite);
    reverseArray(rookEvalBlack, rookEvalWhite);
    reverseArray(bishopEvalBlack,bishopEvalWhite);
    reverseArray(kingEvalBlack,kingEvalWhite); 
}
